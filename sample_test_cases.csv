id,title,steps,expected_result
CB_DEP_001,个人客户成功开户,1. 登录核心银行系统。 2. 进入“账户管理”->“开户”菜单。 3. 输入客户身份信息（姓名、身份证号、手机号等）。 4. 选择账户类型（如：活期储蓄账户）。 5. 输入初始存款金额（如：1000元）。 6. 提交开户申请。,系统提示“开户成功”。生成一个新的账户号码。账户余额正确显示为1000元。账户状态为“正常”。
CB_DEP_002,开户失败-客户信息不完整,1. 登录核心银行系统。 2. 进入开户界面。 3. 故意遗漏必填字段（如：身份证号）。 4. 尝试提交申请。,系统拒绝提交，并在缺失的字段旁高亮显示错误提示（如：“身份证号为必填项”）。未创建任何新账户。
CB_DEP_003,活期账户成功存款,1. 登录系统。 2. 进入“交易”->“存款”菜单。 3. 输入有效的账户号码。 4. 输入存款金额（如：500元）。 5. 提交交易。,系统提示“存款成功”。交易记录中增加一条存款交易，金额为500元。账户余额增加500元。
CB_DEP_004,存款失败-账户状态异常（已冻结）,1. 登录系统。 2. 尝试向一个状态为“冻结”的账户进行存款。 3. 输入存款金额并提交。,系统提示“交易失败：账户状态异常，不可交易”。账户余额未发生改变。
CB_DEP_005,活期账户成功取款-余额充足,1. 登录系统。 2. 进入“交易”->“取款”菜单。 3. 输入有效的账户号码。 4. 输入取款金额（如：200元，账户余额足够）。 5. 提交交易。,系统提示“取款成功”。交易记录中增加一条取款交易，金额为200元。账户余额减少200元。
CB_DEP_006,取款失败-余额不足,1. 登录系统。 2. 尝试从一个余额为100元的账户取款200元。 3. 提交交易。,系统提示“交易失败：余额不足”。账户余额保持不变（仍为100元）。交易记录中记录一条失败的交易尝试。
CB_WIRE_001,同行同名客户间成功转账,1. 登录系统。 2. 进入“转账”菜单。 3. 选择转出账户。 4. 输入转入账户的账号（同行）。 5. 输入转账金额（如：300元）。 6. 提交转账。,系统提示“转账成功”。转出账户余额减少300元。转入账户余额增加300元。双方交易记录中均生成对应的转账明细。
CB_WIRE_002,转账失败-转出账户日累计限额,1. 登录系统。 2. 进行一笔转账，使该账户当日累计转出金额超过其设定的限额（如：日限额5000元，已转4900元，尝试再转200元）。 3. 提交交易。,系统提示“交易失败：超过账户单日转账限额”。转出和转入账户余额均未发生变化。
CB_INT_001,活期账户期末结息计算正确,1. 在系统跑批日期（如：季末20日）执行利息计算批处理作业。 2. 查询一个日均余额为10000元的活期账户（假设年利率0.3%）。,系统自动计算并计提利息（例如：10000 * 0.3% / 360 * 天数）。利息金额正确计入账户余额。生成一条结息交易记录。
CB_INT_002,定期到期自动转存本息,1. 创建一个3个月定期存款账户，金额10000元，到期自动转存。 2. 等待3个月到期日，系统执行批处理。 3. 查询该账户。,原定期账户状态变为“已结清”。系统自动创建一笔新的定期存款账户，本金为“10000元 + 到期利息”。新账户起息日和到期日设置正确。
CB_TXN_001,成功查询账户交易流水,1. 登录系统。 2. 进入“查询”->“交易明细”菜单。 3. 输入一个账户号码和日期范围（如：本月）。 4. 执行查询。,系统返回该账户在指定时间范围内的所有交易记录清单，包括交易时间、类型、金额、余额等，信息完整准确。
CB_TXN_002,交易冲正-存款操作冲正,1. 执行一笔存款交易（交易A）。 2. 发现操作错误（如金额输错），立即执行冲正交易。 3. 输入原交易A的参考号执行冲正。,系统提示“冲正成功”。原存款交易产生的余额增加被抵消。账户余额恢复至交易A之前的状态。生成一条冲正交易记录，与原交易关联。
CB_ATH_001,用户成功登录系统,1. 打开核心银行系统登录界面。 2. 输入正确的用户名和密码。 3. 点击登录。,系统验证通过，成功跳转到主工作台界面。
CB_ATH_002,用户登录失败-密码错误,1. 打开登录界面。 2. 输入正确的用户名但错误的密码。 3. 点击登录。,系统提示“用户名或密码错误”，登录失败。停留在登录界面。
CB_RPT_001,生成日终资产负债表,1. 在日终批处理完成后。 2. 登录系统。 3. 运行“报表”->“资产负债表”功能。 4. 选择当前业务日期。 5. 生成报表。,系统成功生成PDF或Excel格式的报表。报表数据准确，资产总额等于负债加所有者权益总额，试算平衡。
CB_LOAN_001,个人客户成功申请并发放信用贷款,1. 登录系统。 2. 进入“贷款管理”->“贷款申请”菜单。 3. 输入客户ID，系统自动带出客户信息和信用评级。 4. 选择贷款产品（如：个人信用贷），输入申请金额、期限。 5. 系统自动计算还款计划和利息。 6. 审批人员审批通过。 7. 执行“贷款发放”操作。,系统提示“贷款发放成功”。客户还款账户余额增加贷款金额。生成一笔状态为“正常”的贷款合约。生成完整的还款计划表（每期还款本金、利息、日期清晰）。
CB_LOAN_002,贷款批量扣款成功,1. 在还款日，系统执行批处理作业。 2. 批处理针对到期还款的贷款合约进行扣款。,系统从借款人指定的还款账户中成功扣划当期应还金额（本金+利息）。贷款合约的当前期次状态更新为“已结清”，下一期次变为“当期应还”。生成成功的扣款交易记录。
CB_LOAN_003,贷款批量扣款失败-余额不足,1. 设置一个还款账户余额不足的贷款合约。 2. 在还款日执行批处理扣款。,系统尝试扣款失败。生成一条扣款失败记录。贷款合约状态更新为“逾期”。根据规则可能生成一条罚息记录。
CB_CARD_001,信用卡成功开户并设置信用额度,1. 登录系统。 2. 进入“信用卡”->“申请”菜单。 3. 输入客户信息并进行授信审批（如：核准信用额度10000元）。 4. 生成卡号，制作并激活卡片。,系统成功创建信用卡账户。账户状态为“正常”。信用额度、现金额度设置正确。可用额度等于信用额度。
CB_CARD_002,信用卡消费交易授权成功,1. 模拟一笔500元的信用卡消费交易。 2. 向核心系统发送授权请求（包含卡号、金额、商户类型等）。,系统检查卡状态正常、额度充足，返回“授权批准”响应码。该信用卡账户的可用额度即时减少500元。
CB_CARD_003,信用卡消费交易授权失败-超过信用额度,1. 模拟一笔15000元的消费交易（信用卡额度为10000元）。 2. 向核心系统发送授权请求。,系统检查后返回“授权拒绝：超出信用额度”响应码。该信用卡账户的可用额度保持不变。
CB_FX_001,客户成功进行外汇兑换,1. 登录系统。 2. 进入“外汇”->“兑换”菜单。 3. 选择卖出货币USD（100美元）和买入货币CNY。 4. 系统根据实时汇率计算出应得人民币金额。 5. 提交交易。,系统提示“交易成功”。客户美元账户余额减少100。客户人民币账户余额增加计算得出的人民币金额。交易记录中记录汇率和金额。
CB_FX_002,外汇兑换失败-汇率波动超过容差,1. 客户在查询汇率后未及时确认。 2. 当客户提交时，市场汇率已发生大幅波动，超出系统设定的容差范围。 3. 提交交易。,系统提示“汇率已变化，请重新查询”，并拒绝交易。客户的外币和本币账户余额均未发生变动。
CB_BATCH_001,日终批处理成功运行（EOD）,1. 在业务日结束后，启动日终批处理（End of Day）流程。 2. 流程包括：交易轧差、利息计提、费用计算、生成报表、日期切换等。,批处理作业依次成功执行，无错误。系统业务日期自动切换到下一工作日。所有当日发生的交易均已入账。利息和费用计算准确。
CB_BATCH_002,批量代发工资处理成功,1. 准备一个包含员工账号、金额的批量文件。 2. 登录系统，进入“批量业务”->“代发工资”菜单。 3. 上传批量文件并确认处理。,系统解析文件成功，提示“共处理X笔，成功Y笔”。成功将工资金额从企业账户转入每个员工的个人账户。生成批量处理报告。
CB_INT_003,定期账户提前支取-按协议收取罚息,1. 客户申请提前支取一笔未到期的定期存款。 2. 系统根据产品条款（如：按活期利率计息并收取X%罚金）计算本息和罚金。 3. 确认操作。,系统成功结清定期账户。本金和按活期计算的利息计入客户账户。罚金从账户中扣除。交易记录清晰显示本金、利息、罚金各项金额。
CB_TXN_003,交易流水号连续性检查,1. 人工或通过脚本检查每日的交易流水号（Trace ID）。,所有交易（存款、取款、转账等）的流水号连续且无重复、无跳号。确保系统在高压下也未出现流水号重复问题。
CB_SEC_001,用户密码强度强制策略,1. 尝试将用户密码修改为一个弱密码（如：123456）。,系统拒绝修改，并提示“密码强度不足，必须包含大小写字母、数字和特殊字符，且长度大于8位”。
CB_SEC_002,用户登录失败次数超限账户锁定,1. 使用一个测试账户，连续输入错误密码5次（假设锁定阈值是5次）。 2. 第6次尝试登录，即使输入正确密码。,系统提示“账户已锁定，请联系管理员”。账户被锁定，无法登录。防止暴力破解。
CB_GL_001,总账账户过账准确性检查,1. 执行一笔简单的存款交易。 2. 立即检查总账系统。,相应的资产类（如：现金）、负债类（如：客户存款）科目正确、及时地进行了借贷记账，金额准确。保证核心系统与总账数据的一致性。
CB_PRD_001,新产品创建并成功应用于开户,1. 管理员登录后台。 2. 创建一个新的存款产品（如：特色定期”，设置利率、期限、起存金额等规则）。 3. 保存并发布该产品。 4. 前端柜员尝试为客户开通此产品。,新产品出现在可选的产品列表中。柜员可以成功使用该产品开户，系统能正确应用该产品的所有业务规则（如：起存金额校验、利率计算）。
CB_PAY_001,人行大小额支付系统汇款（贷记客户账）,1. 接收一笔来自人行支付系统的报文（如：CNPS），指令向本行某客户账户汇款。 2. 系统自动处理该笔来账。,系统成功解析报文。指定客户账户余额正确增加。交易记录明确标注为“大小额来账”。系统自动生成并发送成功应答报文。
CB_PAY_002,人行大小额支付系统汇款失败-账号户名不符,1. 接收一笔来账报文，其中收款人账号存在，但户名与系统记录不完全一致。 2. 系统自动处理。,系统识别出账号与户名不符，自动拒绝该笔交易。生成并发送拒绝应答报文。客户账户余额不变。该笔交易挂账至“暂收款项”等内部账户，等待人工处理。
CB_PAY_003,第三方支付机构（如支付宝）快捷支付充值资金结算,1. 接收来自第三方支付机构的批量清算文件（或API请求）。 2. 文件包含多笔成功支付交易，汇总后需记入第三方支付机构在本行的备付金账户。 3. 执行清算处理。,系统成功处理清算文件。第三方支付机构的备付金账户余额正确增加。系统生成清算对账文件供第三方机构获取。所有资金变动准确无误。
CB_GL_002,内部账户利息自动计提,1. 系统在日终批处理（EOD）过程中。 2. 扫描所有需要计提利息的内部账户（如：内部资金拆借账户）。,系统根据每个内部账户的余额和利率，正确计算并计提利息。生成相应的利息计提会计分录。内部账户余额更新正确。
CB_INT_004,浮动利率贷款利率重置,1. 一笔基于LPR的浮动利率贷款到了重定价日。 2. 系统执行批处理作业。,系统自动根据最新公布的LPR利率，加上合同约定的基点（Basis Point），计算出新的执行利率。贷款下一阶段的还款计划表根据新利率重新生成。
CB_CIF_001,客户信息修改并同步至相关账户,1. 在客户信息管理系统（CIF）中修改客户的手机号码。 2. 保存修改。,系统提示“客户信息更新成功”。该客户名下的所有存款账户、贷款账户信息中的客户联系信息同步更新。确保系统数据一致性。
CB_CIF_002,客户合并操作,1. 发现两个客户号对应同一客户（如：身份证号相同）。 2. 执行“客户合并”操作，将B客户合并到A客户。 3. 选择将B客户名下的账户归并到A客户下。,系统成功合并客户信息，B客户号被标记为“已合并”。原B客户名下的所有账户现在归属于A客户号。账户的交易历史、余额等信息完整无误。
CB_TXN_004,长交易等待超时回滚,1. 发起一笔交易（如：复杂的跨行转账）。 2. 在交易处理过程中，模拟网络中断或超时。 3. 等待系统交易超时时间（如：60秒）到达。,系统检测到交易超时，自动回滚（Rollback）该交易的所有数据库操作。账户余额保持不变，无部分记账的情况发生。保证交易的原子性。
CB_RPT_002,监管报表（如：1104报表）数据准确性校验,1. 在报表期结束时（如：月末、季末）。 2. 通过系统“报表管理”模块生成指定的监管报表。 3. 人工或通过脚本校验报表中关键数据（如：贷款总额、存款总额）与核心系统总账、分户账数据是否一致。,报表成功生成。报表数据与核心系统底层数据完全一致，无差异。满足监管机构的报送要求。
CB_AUD_001,关键操作日志审计追踪,1. 管理员登录系统后，进行一项敏感操作（如：修改利率参数、强制修改客户密码）。 2. 操作完成后，进入“审计日志”模块查询。,系统审计日志中详细记录了操作时间、操作员ID、操作内容、IP地址、操作前值和操作后值。满足安全审计要求。
CB_SEC_003,敏感信息掩码显示,1. 在前端界面的任何查询页面（如：账户查询、客户信息查询）中。 2. 查看显示的客户身份证号、银行卡号等信息。,系统对敏感信息进行前端掩码显示（如：身份证号显示为`110105****1234`，卡号显示为`6259 **** **** 1234`），防止信息泄露。
CB_BAV_001,账户验证（二、三、四要素认证）成功,1. 在需要强验证的场景（如：大额转账、网贷开户）。 2. 调用账户验证接口，输入正确的账号、姓名、身份证号、手机号（四要素）。 3. 向该手机号发送验证码并正确输入。,系统调用外部渠道（如：银联或运营商）验证通过，返回“验证成功”。业务得以继续执行。
CB_BAV_002,账户验证（二、三、四要素认证）失败,1. 在需要强验证的场景。 2. 调用账户验证接口，输入账号和错误的姓名。,系统调用外部渠道验证后，返回“验证失败：账号户名不符”。业务被中断，并提示客户验证失败。
CB_REC_001,日终跑批后总分余额核对,1. 在每日日终批处理（EOD）完成后。 2. 执行自动化核对脚本。,所有科目的总账余额等于其下所有分户账余额之和。核对结果“平衡”，无差异。这是确保当日账务处理正确的黄金标准。
CB_ORG_001,不同机构（支行）间资金划转,1. 登录A支行的柜员账号。 2. 发起一笔资金划转交易，将资金从A支行的内部账户划转到B支行的内部账户。,交易成功。A支行内部账户余额减少，B支行内部账户余额增加。总行层面总账余额保持不变（一借一贷）。
CB_INTL_001,境外汇款（电汇）出境-全额到账,1. 客户申请向境外银行汇款（USD）。 2. 选择“手续费另付”（BEN）。 3. 系统计算本币金额、手续费、电讯费。 4. 客户确认。 5. 生成SWIFT MT103报文。,系统成功扣划本币金额及人民币手续费。生成正确的SWIFT报文。头寸账户金额正确变动。交易状态为“已发出”。
CB_INTL_002,境外汇款-中间行扣费,1. 执行一笔境外汇款。 2. 模拟中间行扣费（如：扣了15美元）。 3. 收款人收到金额为（汇款金额-15）美元。,系统成功接收中间行扣费通知。自动将扣费金额记入“中间行业务费用”等损益类科目。业务人员可查询到该笔汇款的最终状态和实际入账金额。
CB_WM_001,客户购买理财产品成功,1. 客户从储蓄账户划转资金至理财账户。 2. 认购某理财产品（金额、产品代码）。 3. 确认购买。,储蓄账户余额减少。客户持有该理财产品的份额增加。生成理财产品持有记录。系统冻结相应的资金直至起息日。
CB_WM_002,理财产品到期自动赎回,1. 某客户持有的理财产品到达到期日。 2. 系统执行批处理作业。,系统自动计算本金和收益。理财产品份额清零。本金和收益资金自动划回客户指定的资金账户（如活期账户）。生成赎回交易记录。
CB_API_001,通过OpenAPI成功查询账户余额,1. 外部系统通过API网关调用核心系统的账户查询接口。 2. 传入有效的令牌（Token）和账户号。,API返回HTTP 200状态码。返回的JSON/XML数据中包含正确的账户余额、币种、状态等信息。
CB_API_002,API接口调用频率限流,1. 在短时间内（如1秒内）连续调用同一API接口超过设定的阈值（如100次）。,API网关返回HTTP 429（Too Many Requests）状态码，拒绝后续请求。核心系统业务处理未受影响。
CB_SYS_001,参数化管理-动态调整存款利率,1. 管理员登录参数管理平台。 2. 找到“定期存款利率”参数表。 3. 将一年期利率从1.75%修改为1.8%。 4. 保存并生效。,系统提示“参数更新成功”。此后新开立的定期存款账户立即采用1.8%的新利率计算利息。现有存量账户利率不变。
CB_SYS_002,业务时序控制-日终期间拒绝交易,1. 在系统开始运行日终批处理（EOD）时。 2. 尝试发起一笔存款交易。,系统提示“系统正在日终批处理，暂无法受理交易”，并拒绝该交易。保证批处理期间数据的一致性。
CB_STRESS_001,联机交易并发性能测试,1. 使用性能测试工具（如JMeter）模拟100个虚拟用户同时进行登录、查询、小额转账等操作。 2. 持续运行15分钟。,系统无任何事务失败。平均响应时间保持在协议范围内（如<2秒）。CPU、内存使用率正常，无内存泄漏。
CB_STRESS_002,批量处理性能测试,1. 准备一个包含10万笔代发工资记录的批量文件。 2. 在业务低峰期执行该批量处理。,系统在预定的时间窗口内（如30分钟）成功处理完所有记录。处理速度（笔/秒）满足性能要求。
CB_HA_001,集群节点故障转移（Failover）,1. 在核心系统采用双机集群部署的环境中。 2. 人工模拟主节点宕机（如kill进程、断网）。,集群管理软件能在秒级内（如30秒）自动检测到故障，并将业务流量无缝切换至备用节点。前端交易仅有瞬间卡顿，无交易失败。
CB_DA_001,数据归档与查询,1. 对三年前已结清的账户和历史交易数据进行归档操作。 2. 归档完成后，在前端系统查询该客户的历史交易明细。,系统提示“查询数据量较大，已从归档库查询”。能正确显示出归档的历史数据，只是查询速度可能稍慢。当前生产库的数据量得到有效控制。
CB_ERR_001,网络抖动导致交易冲正,1. 执行一笔存款交易。 2. 在核心系统记账成功后、准备返回应答给前端时，模拟网络瞬间中断。,前端因超时未收到响应，会发起冲正请求。核心系统收到冲正指令后，能正确识别出原交易已成功，并返回“冲正拒绝，原交易已成功”的特殊应答，防止账户余额被错误扣减。
CB_ERR_002,数据库连接池耗尽,1. 模拟数据库压力极大或存在慢查询，导致连接池中的所有连接被占用且未释放。 2. 此时发起新的交易请求。,系统应有良好的异常处理机制，返回“系统繁忙，请稍后再试”等友好提示，而不是抛出底层数据库异常给前端。系统日志应记录连接池耗尽的警告。
CB_COMP_001,反洗钱（AML）大额交易预警,1. 客户进行一笔金额恰好达到大额报告标准（如：人民币5万元）的现金存款。 2. 完成交易。,系统自动触发反洗钱预警规则。在AML监控平台生成一条待处理的大额交易报告任务，等待合规人员审核。
CB_COMP_002,客户风险等级调整触发回溯审查,1. 合规人员将某个客户的风险等级从“低”调整为“高”。 2. 保存设置。,系统自动触发回溯审查任务，扫描该客户过去一段时间（如90天）内的所有交易，检查是否有可疑交易模式。审查结果在AML平台生成报告。